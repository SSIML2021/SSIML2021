{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Paragraph causal relation detection: do they contain a causal relation or not"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Example**: '3-2: <span style=\"background-color: lightblue;\">[concept Giving to the ECB the ultimate responsibility for supervision of banks in the euro area concept]</span> <span style=\"background-color: pink;\">[explanation will decisively contribute to increase explanation]</span> <span style=\"background-color: lightblue;\">[concept confidence between the banks concept]</span> <span style=\"background-color: pink;\">[explanation and in this way increase explanation]</span> <span style=\"background-color: lightblue;\">[concept the financial stability in the euro area concept]</span>. The euro area governments and the European institutions, including naturally the European Commission and the ECB, will do whatever is necessary to secure the financial stability of the euro area.\\n'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Load data\n",
    "\n",
    "This notebook expects three files in a subdirectory `csv`: `Map_Contents-20200726.csv`, `Speech_Contents-20210520.txt` and `Speeches-20210520.txt`. It will look for files with the speeches in the subdirectory `txt`. The names of the speech files are expected to start with the date followed by a space and the suname of the speaker (currently restricted to one word, see function `get_speech_id`).\n",
    "\n",
    "If you are just interested in learning what the code is doing, you can skip all code blocks with the commands `import` (load libraries), `assert` (perform tests) and `def` (define functions), and examine the other code blocks."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F:\\PythonJupyterStudy\\CM\\CM_Macro\\SSIML2021-macro-precision\n"
     ]
    }
   ],
   "source": [
    "cd .."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "from src.data.make_dataset import read_data_file\n",
    "from src.data.make_dataset import make_dataset\n",
    "import fasttext\n",
    "from langdetect import detect\n",
    "from nltk.tokenize import word_tokenize\n",
    "import numpy as np\n",
    "import re\n",
    "import random\n",
    "import sklearn\n",
    "from sklearn.metrics import classification_report,confusion_matrix,f1_score\n",
    "from sklearn.utils import shuffle,resample\n",
    "from sklearn.model_selection import KFold\n",
    "import pandas as pd\n",
    "from termcolor import colored\n",
    "from IPython.display import clear_output\n",
    "import matplotlib.pyplot as plt\n",
    "import itertools"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "assert os.path.isdir(\"csv\"), 'The directory \"csv\" does not exist!'\n",
    "assert os.path.isdir(\"txt\"), 'The directory \"txt\" does not exist!'\n",
    "map_contents = read_data_file(\"csv/Map_Contents-20200726.csv\")\n",
    "speech_contents = read_data_file(\"csv/Speech_Contents-20210520.txt\")\n",
    "speeches = read_data_file(\"csv/Speeches-20210520.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#set random seed to keep consistency between different experiments\n",
    "seed_val = 42\n",
    "random.seed(seed_val)\n",
    "np.random.seed(seed_val)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Predict presence of causal relations in paragraphs\n",
    "\n",
    "Steps:\n",
    "\n",
    "1. store the paragraphs in the data structure X (data) after separating punctuation from words and replacing upper case by lower case\n",
    "2. create a data structure y (labels) with True for paragraphs with causal relations and False for others\n",
    "3. predict a label for each paragraph with a machine learning model generated from the other paragraphs\n",
    "4. evaluate the results\n",
    "\n",
    "The code in this task uses the packages `fasttext` (for machine learning) and `nltk` (for language processing) \n",
    "\n",
    "The task uses limited natural language processing to prepare the data for machine leaning:\n",
    "\n",
    "1. tokenization: separate punctuation from words\n",
    "2. conversion of upper case characters to lower case\n",
    "\n",
    "Other interesting natural language preprocessing steps:\n",
    "\n",
    "3. part-of-tagging\n",
    "4. full parsing (Stanford parser)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def make_train_test(X, y, test_index=0):\n",
    "    train_list = []\n",
    "    test_list = []\n",
    "    index = 0\n",
    "    for key in sorted(X.keys()):\n",
    "        if index == test_index:\n",
    "            test_list.append(f\"__label__{str(y[key])} {X[key]}\")\n",
    "        else:\n",
    "            train_list.append(f\"__label__{str(y[key])} {X[key]}\")\n",
    "        index += 1\n",
    "    return train_list, test_list\n",
    "\n",
    "def make_train_file(file_name, train_list):\n",
    "    data_file = open(file_name, \"w\",encoding='utf-8')\n",
    "    for line in train_list:\n",
    "        print(line, file=data_file)\n",
    "    data_file.close()\n",
    "\n",
    "def decode_label(label):\n",
    "    return re.sub(\"__label__\", \"\", label) == \"True\"\n",
    "\n",
    "def show_results(results):\n",
    "    result_list = []\n",
    "    for key in results:\n",
    "        result_list.append({\"paragraph\": key})\n",
    "        result_list[-1].update(results[key])\n",
    "    return pd.DataFrame(result_list, index=[\"\"]*len(result_list))\n",
    "\n",
    "def count_y_values(y):\n",
    "    values = {}\n",
    "    for key in y:\n",
    "        if y[key] not in values:\n",
    "            values[y[key]] = 0\n",
    "        values[y[key]] += 1\n",
    "    table = []\n",
    "    for key in values:\n",
    "        table.append({\"label\": key, \"count\": values[key], \"percentage\": f\"{round(100*values[key]/len(y), 1)}%\"})\n",
    "    return pd.DataFrame(table, index=[\"\"]*len(table))\n",
    "\n",
    "def squeal(text):\n",
    "    clear_output(wait=True)\n",
    "    print(text)\n",
    "\n",
    "def make_fasttext_data(data_in):\n",
    "    data_out = []\n",
    "    for paragraph, label in data_in:\n",
    "        data_out.append(\"__label__\" + str(label) + \" \" + paragraph)\n",
    "    return data_out\n",
    "\n",
    "def run_experiments(X, y, wordNgrams=1, pretrainedVectors=\"\"):\n",
    "    y_pred = []\n",
    "    y_true = [ y[key] for key in X if key in y]\n",
    "    counter = 0\n",
    "    data = np.array([ (X[key], y[key]) for key in X if key in y])\n",
    "    for train_items, test_items in sklearn.model_selection.KFold(n_splits=10).split(X):\n",
    "        train_data = make_fasttext_data(data[train_items])\n",
    "        make_train_file(\"train_file.txt\", train_data)\n",
    "        model = fasttext.train_supervised(\"train_file.txt\", dim=300, pretrainedVectors=pretrainedVectors, wordNgrams=wordNgrams)\n",
    "        test_data = make_fasttext_data(data[test_items])\n",
    "        predicted_labels = model.predict(test_data)\n",
    "        y_pred.extend(predicted_labels[0])\n",
    "        counter += 1\n",
    "        squeal(f\"Ran experiment {counter} of 10\")\n",
    "        \n",
    "    y_pred = [decode_label(label[0]) for label in y_pred]\n",
    "    return y_true, y_pred\n",
    "\n",
    "def evaluate_results(y_true, y_pred):\n",
    "    precision, recall, fscore, _ = sklearn.metrics.precision_recall_fscore_support(y_true, y_pred, average='macro')\n",
    "    print(f\"Precision: {precision:0.3f}; recall: {recall:0.3f}; F1: {fscore:0.3f}\")\n",
    "\n",
    "def plot_confusion_matrix(cm,\n",
    "                          target_names,\n",
    "                          title='Confusion matrix',\n",
    "                          cmap=None,\n",
    "                          normalize=True):\n",
    "    if cmap is None:\n",
    "        cmap = plt.get_cmap('Blues')\n",
    "\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n",
    "    plt.title(title)\n",
    "    plt.colorbar()\n",
    "\n",
    "    if target_names is not None:\n",
    "        tick_marks = np.arange(len(target_names))\n",
    "        plt.xticks(tick_marks, target_names, rotation=45)\n",
    "        plt.yticks(tick_marks, target_names)\n",
    "\n",
    "    if normalize:\n",
    "        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n",
    "\n",
    "\n",
    "    thresh = cm.max() / 1.5 if normalize else cm.max() / 2\n",
    "    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n",
    "        if normalize:\n",
    "            plt.text(j, i, \"{:0.4f}\".format(cm[i, j]),\n",
    "                     horizontalalignment=\"center\",\n",
    "                     color=\"white\" if cm[i, j] > thresh else \"black\")\n",
    "        else:\n",
    "            plt.text(j, i, \"{:,}\".format(cm[i, j]),\n",
    "                     horizontalalignment=\"center\",\n",
    "                     color=\"white\" if cm[i, j] > thresh else \"black\")\n",
    "\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.ylabel('True label')\n",
    "    plt.xlabel('Predicted label')\n",
    "    plt.show()\n",
    "    return"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The variable `X` in the next code block contains all the data (paragraphs) available for machine learning. The variable `y` contains all the associated labels, with values `True` or `False`.   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[31mwarning: mismatch meta data (10) vs file (7) for file 1998-12-14 Schroeder ann.txt\u001b[0m\n",
      "skipping file in language fr: 2009-12-01 Sarkozy Elysee (Economy) ann fr.txt\n",
      "skipping file in language fr: 2009-12-14 Sarkozy Elysee (Economy) ann fr.txt\n",
      "\u001b[31mwarning: mismatch meta data (2) vs file (1) for file 2010-03-29 Brown sfm2020 ann.txt\u001b[0m\n",
      "skipping file in language fr: 2010-04-20 Barroso European Commission ann fr.txt\n",
      "skipping file in language fr: 2011-01-13 Sarkozy gb ann.txt\n",
      "skipping file in language nl: 2011-04-06 Rutte FD evenement ann NL.txt\n",
      "\u001b[31mwarning: mismatch meta data (14) vs file (12) for file 2011-05-20 Weidmann Deutsche Bundesbank_01 ANN.txt\u001b[0m\n",
      "skipping file in language nl: 2011-09-27 Rutte Rijksoverheid ann.txt\n",
      "skipping file in language nl: 2011-10-28 Knot dnb_01 ANN NL.txt\n",
      "\u001b[31mwarning: mismatch meta data (4) vs file (3) for file 2011-11-10 Orban London ann.txt\u001b[0m\n",
      "\u001b[31mwarning: mismatch meta data (4) vs file (3) for file 2011-11-12 Rutte Trilateral Commission - code ann.txt\u001b[0m\n",
      "skipping file in language de: 2012-01-06 Rutte CSU klausurtagung ann G.txt\n",
      "\u001b[31mwarning: unknown paragraph id nan for document 208; file name: 2012-02-24 Weidmann Deutsche Bundesbank ann.txt\u001b[0m\n",
      "\u001b[31mwarning: mismatch meta data (24) vs file (22) for file 2012-07-11 Rajoy La Moncloa ann.txt\u001b[0m\n",
      "\u001b[31mwarning: mismatch meta data (11) vs file (10) for file 2012-07-17 Linde Banco de Espana_01 ann.txt\u001b[0m\n",
      "skipping file in language unk: 2012-07-26 Barroso European Commission.txt\n",
      "skipping file in language fr: 2012-08-30 Hollande SFM2020 ann fr.txt\n",
      "\u001b[31mwarning: unknown paragraph id nan for document 335; file name: 2012-10-17 Thorning Schmidt Statsministeriet ann.txt\u001b[0m\n",
      "\u001b[31mwarning: mismatch meta data (21) vs file (20) for file 2012-10-17 Thorning Schmidt Statsministeriet ann.txt\u001b[0m\n",
      "\u001b[31mwarning: mismatch meta data (7) vs file (6) for file 2012-12-07 Simor Bis.org ann.txt\u001b[0m\n",
      "skipping file in language fr: 2013-02-19 Hollande SFM2020 ann fr.txt\n",
      "\u001b[31mwarning: mismatch meta data (19) vs file (18) for file 2013-02-26 Rohde Danmarks Nationalbank ann.txt\u001b[0m\n",
      "skipping file in language fr: 2013-04-17 Hollande SFM2020 ann fr.txt\n",
      "\u001b[31mwarning: mismatch meta data (14) vs file (13) for file 2013-05-31 Linde Banco de Espana_01 ann.txt\u001b[0m\n",
      "\u001b[31mwarning: mismatch meta data (22) vs file (19) for file 2013-10-08 Weidmann Deutsche Bundesbank ann.txt\u001b[0m\n",
      "skipping file in language de: 2013-11-21 Merkel Bundesregerung ann g.txt\n",
      "skipping file in language de: 2014-02-27 Merkel Bundesregerung ann g.txt\n",
      "\u001b[31mwarning: mismatch meta data (21) vs file (20) for file 2014-07-18 Weidmann Deutsche Bundesbank ann.txt\u001b[0m\n",
      "skipping file in language de: 2015-01-19 Merkel Bundesregerung ann g.txt\n",
      "skipping file placeholder.txt\n",
      "read 118 files with 897 paragraphs; skipped 16 files\n"
     ]
    }
   ],
   "source": [
    "X, y = make_dataset(speeches, speech_contents, map_contents)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Balance data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>label</th>\n",
       "      <th>count</th>\n",
       "      <th>percentage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <td>True</td>\n",
       "      <td>660</td>\n",
       "      <td>73.6%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <td>False</td>\n",
       "      <td>237</td>\n",
       "      <td>26.4%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  label  count percentage\n",
       "   True    660      73.6%\n",
       "  False    237      26.4%"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_y_values(y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1.First of all, there still are some *Missing value* paragraphs in our data, therefore we need to remove them. <br><br>\n",
    "2.In addition, our data is highly imbalanced, that's means we have twice as many paragraphs with causal relations compared to paragraphs without causal relations. This issue would make our classifier guess a paragraph contains causal relation with a high probability because it would be less likely to make a mistake, but this is not what we want. Therefore we need to balance our data.<br>\n",
    "\n",
    "<h1><center>Undersampling VS  Oversampling</center></h1>\n",
    "\n",
    "![](https://raw.githubusercontent.com/rafjaa/machine_learning_fecib/master/src/static/img/resampling.png)\n",
    "\n",
    "There are two common methods of balancing data: Undersampling and Oversampling, the former refers to the random sampling from the class which contains more data in order to make the dataset balanced. The latter is to copy data points from the class with less data, then make the dataset balanced.<br><br>\n",
    "Both methods have their advantages and disadvantages, where Undersampling will make us discard some existing data, which will cost our model some training opportunities given our small data size. Nonetheless, oversampling \"manually\" improves the accuracy of the model because some data appear twice in the dataset, which means that the data points that appear in the test set are likely to appear in the training set as well."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def over_sampling(X,y):\n",
    "    \"\"\"\n",
    "    remove Missing value first, then output two balanced dataset (Undersampling and Oversampling)\n",
    "    Input: X,y before pre-processing\n",
    "    Output: dataframes after removing missing value, Undersampling and Oversampling\n",
    "    \"\"\"\n",
    "    df = pd.DataFrame({'X':pd.Series(X),'y':pd.Series(y)})\n",
    "    df_true = df[df['y'] == True]\n",
    "    df_false = df[df['y'] == False] \n",
    "    \n",
    "    #Upsampling, for the class with less data, copy some data \n",
    "    df_false_upsampled = resample(df_false,random_state=42,n_samples=len(df_true),replace=True)\n",
    "    df_upsampled = pd.concat([df_false_upsampled,df_true])\n",
    "    df_upsampled = shuffle(df_upsampled)\n",
    "    \n",
    "    print('\\nWe totally have {} training data after oversampling.'.format(len(df_upsampled)))\n",
    "    return df_upsampled\n",
    "\n",
    "def transform_df(df_upsampled):\n",
    "    #transform label to int\n",
    "    df_upsampled.loc[df_upsampled['y'] == 'True', 'y'] = 1\n",
    "    df_upsampled.loc[df_upsampled['y'] == 'False', 'y'] = 0\n",
    "    df_upsampled.y = df_upsampled.y.astype(int)\n",
    "    \n",
    "    return df_upsampled"
   ]
  },
  {
   "attachments": {
    "1.1.3Model_Processing_Flow.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Model processing flow\n",
    "\n",
    "![1.1.3Model_Processing_Flow.png](attachment:1.1.3Model_Processing_Flow.png)\n",
    "\n",
    "\n",
    "As shown in the Model processing flow above, we will only use over-sampling in a appropriate way: After using kfold spliting training set and validation set, only the training set data will be over-sampled, which ensure that we won't have duplicate validation data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. N-gram models"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <center>Understand confusion matrix<center>\n",
    "\n",
    "\n",
    "![](https://miro.medium.com/max/693/1*7EYylA6XlXSGBCF77j_rOA.png)\n",
    "    \n",
    "<center>$Recall: \\Large\\frac{TP}{TP+FN}$ $\\quad\\quad\\quad\\quad Precision: \\Large\\frac{TP}{TP+FP}$<center><br>\n",
    "<center>$F1: \\Large\\frac{2*Recall*Precision}{Recall+Precision}$<center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def run(X, y, wordNgrams=1, pretrainedVectors=\"\"):\n",
    "    print('Preprocessing:\\n')\n",
    "    df = pd.DataFrame({'X':pd.Series(X),'y':pd.Series(y)})\n",
    "    print('{} na data found'.format(len(df[df['X'].isna() == True].index)))\n",
    "    df = df.dropna()\n",
    "    print('na data dropped')\n",
    "    \n",
    "    \n",
    "    kf = KFold(n_splits=10)\n",
    "    kf.get_n_splits(df)\n",
    "    k = 0\n",
    "    \n",
    "    training_pred = []\n",
    "    training_true = []\n",
    "    evaluation_pred = []\n",
    "    evaluation_true = []\n",
    "    \n",
    "    for train_index, test_index in kf.split(df):\n",
    "        print('--------------------------------------------------------Now is {} fold--------------------------------------------------------'.format(k))\n",
    "        X_train, X_test = df['X'][train_index], df['X'][test_index]\n",
    "        y_train, y_test = df['y'][train_index], df['y'][test_index]\n",
    "        \n",
    "        print('[X training set shape, X training set shape]:',X_train.shape,X_test.shape)\n",
    "        \n",
    "\n",
    "        # over-sample the Training set, then transform them to right form\n",
    "        df_train_upsampled = over_sampling(X_train, y_train)\n",
    "        # transform testset to right form\n",
    "        df_test = pd.DataFrame({'X':pd.Series(X_test),'y':pd.Series(y_test)})\n",
    "\n",
    "        train_upsampled = []\n",
    "        for index, row in df_train_upsampled.iterrows():\n",
    "            train_upsampled.append([row['X'], row['y']])\n",
    "        \n",
    "        test_set = []\n",
    "        for index, row in df_test.iterrows():\n",
    "            test_set.append([row['X'], row['y']])\n",
    "        \n",
    "        train_data = make_fasttext_data(train_upsampled)\n",
    "        make_train_file(\"train_file.txt\", train_data)\n",
    "        model = fasttext.train_supervised(\"train_file.txt\", dim=300, pretrainedVectors=pretrainedVectors, wordNgrams=wordNgrams)\n",
    "        test_data = make_fasttext_data(test_set)\n",
    "        \n",
    "        eval_pred = model.predict(test_data)\n",
    "        train_pred = model.predict(train_data)\n",
    "        train_pred = [decode_label(label[0]) for label in train_pred[0]]\n",
    "        eval_pred = [decode_label(label[0]) for label in eval_pred[0]]\n",
    "        \n",
    "        \n",
    "        train_label = df_train_upsampled['y']\n",
    "        eval_label = df_test['y']\n",
    "        \n",
    "        training_pred.append(train_pred)\n",
    "        training_true.append(train_label)\n",
    "        evaluation_pred.append(eval_pred)\n",
    "        evaluation_true.append(eval_label)\n",
    "        \n",
    "        k+=1\n",
    "        \n",
    "    def flatten(t):\n",
    "        return [item for sublist in t for item in sublist]\n",
    "    \n",
    "    evaluation_true = flatten(evaluation_true)\n",
    "    evaluation_pred = flatten(evaluation_pred)\n",
    "    training_true = flatten(training_true)\n",
    "    training_pred = flatten(training_pred)\n",
    "    \n",
    "    \n",
    "    target_names = ['class 0', 'class 1']\n",
    "    \n",
    "    #For training data\n",
    "    print('classification report on training set is:\\n')\n",
    "    clas_reprt_train = classification_report(training_true, training_pred, target_names=target_names)\n",
    "    print(clas_reprt_train)\n",
    "    \n",
    "    print('confusion matrix on training set is:\\n')\n",
    "    cm_train = confusion_matrix(training_true, training_pred)\n",
    "    plot_confusion_matrix(cm_train, ['No causal relation', 'Has causal relation'], normalize=False)\n",
    "    \n",
    "    #For evaluation data\n",
    "    print('classification report on validation set is:\\n')\n",
    "    clas_reprt_eval = classification_report(evaluation_true, evaluation_pred, target_names=target_names)\n",
    "    print(clas_reprt_eval)\n",
    "    \n",
    "    print('confusion matrix on validation set is:\\n')\n",
    "    cm_eval = confusion_matrix(evaluation_true, evaluation_pred)\n",
    "    plot_confusion_matrix(cm_eval, ['No causal relation', 'Has causal relation'], normalize=False)   \n",
    "    \n",
    "    return "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Preprocessing:\n",
      "\n",
      "19 na data found\n",
      "na data dropped\n",
      "--------------------------------------------------------Now is 0 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1162 training data after oversampling.\n",
      "--------------------------------------------------------Now is 1 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1148 training data after oversampling.\n",
      "--------------------------------------------------------Now is 2 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1150 training data after oversampling.\n",
      "--------------------------------------------------------Now is 3 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1166 training data after oversampling.\n",
      "--------------------------------------------------------Now is 4 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 5 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1138 training data after oversampling.\n",
      "--------------------------------------------------------Now is 6 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1158 training data after oversampling.\n",
      "--------------------------------------------------------Now is 7 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1152 training data after oversampling.\n",
      "--------------------------------------------------------Now is 8 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 9 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1156 training data after oversampling.\n",
      "classification report on training set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       0.88      0.18      0.30      5769\n",
      "     class 1       0.54      0.98      0.70      5769\n",
      "\n",
      "    accuracy                           0.58     11538\n",
      "   macro avg       0.71      0.58      0.50     11538\n",
      "weighted avg       0.71      0.58      0.50     11538\n",
      "\n",
      "confusion matrix on training set is:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report on validation set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       0.55      0.11      0.18       237\n",
      "     class 1       0.75      0.97      0.84       641\n",
      "\n",
      "    accuracy                           0.74       878\n",
      "   macro avg       0.65      0.54      0.51       878\n",
      "weighted avg       0.69      0.74      0.66       878\n",
      "\n",
      "confusion matrix on validation set is:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "run(X, y, wordNgrams=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Preprocessing:\n",
      "\n",
      "19 na data found\n",
      "na data dropped\n",
      "--------------------------------------------------------Now is 0 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1162 training data after oversampling.\n",
      "--------------------------------------------------------Now is 1 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1148 training data after oversampling.\n",
      "--------------------------------------------------------Now is 2 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1150 training data after oversampling.\n",
      "--------------------------------------------------------Now is 3 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1166 training data after oversampling.\n",
      "--------------------------------------------------------Now is 4 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 5 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1138 training data after oversampling.\n",
      "--------------------------------------------------------Now is 6 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1158 training data after oversampling.\n",
      "--------------------------------------------------------Now is 7 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1152 training data after oversampling.\n",
      "--------------------------------------------------------Now is 8 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 9 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1156 training data after oversampling.\n",
      "classification report on training set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       0.84      0.45      0.59      5769\n",
      "     class 1       0.62      0.91      0.74      5769\n",
      "\n",
      "    accuracy                           0.68     11538\n",
      "   macro avg       0.73      0.68      0.66     11538\n",
      "weighted avg       0.73      0.68      0.66     11538\n",
      "\n",
      "confusion matrix on training set is:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report on validation set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       0.42      0.24      0.31       237\n",
      "     class 1       0.76      0.88      0.81       641\n",
      "\n",
      "    accuracy                           0.71       878\n",
      "   macro avg       0.59      0.56      0.56       878\n",
      "weighted avg       0.67      0.71      0.68       878\n",
      "\n",
      "confusion matrix on validation set is:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "run(X, y, wordNgrams=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Preprocessing:\n",
      "\n",
      "19 na data found\n",
      "na data dropped\n",
      "--------------------------------------------------------Now is 0 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1162 training data after oversampling.\n",
      "--------------------------------------------------------Now is 1 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1148 training data after oversampling.\n",
      "--------------------------------------------------------Now is 2 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1150 training data after oversampling.\n",
      "--------------------------------------------------------Now is 3 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1166 training data after oversampling.\n",
      "--------------------------------------------------------Now is 4 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 5 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1138 training data after oversampling.\n",
      "--------------------------------------------------------Now is 6 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1158 training data after oversampling.\n",
      "--------------------------------------------------------Now is 7 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1152 training data after oversampling.\n",
      "--------------------------------------------------------Now is 8 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 9 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1156 training data after oversampling.\n",
      "classification report on training set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       0.83      0.50      0.63      5769\n",
      "     class 1       0.64      0.90      0.75      5769\n",
      "\n",
      "    accuracy                           0.70     11538\n",
      "   macro avg       0.74      0.70      0.69     11538\n",
      "weighted avg       0.74      0.70      0.69     11538\n",
      "\n",
      "confusion matrix on training set is:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report on validation set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       0.39      0.28      0.32       237\n",
      "     class 1       0.76      0.84      0.80       641\n",
      "\n",
      "    accuracy                           0.69       878\n",
      "   macro avg       0.57      0.56      0.56       878\n",
      "weighted avg       0.66      0.69      0.67       878\n",
      "\n",
      "confusion matrix on validation set is:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "run(X, y, wordNgrams=3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### To sum up:<br>\n",
    "* As can be seen, after using balanced data, it is also difficult to determine whether a paragraph has a causal relationship in our n-gram model.<br>\n",
    "* classifiers basically unable to distinguish a passage without causality.<br>\n",
    "\n",
    "\n",
    "Model| training set macro precision | training set macro recall | training set macro F1| evaluation set macro precision | evaluation set macro recall | evaluation set macro F1|\n",
    "----------| --------- | ------ | ---- | ---------|----------| --------- | \n",
    "Uni-gram           | 0.71        | 0.58     | <b>0.50</b> | 0.65 | 0.54 | <b>0.51</b> |\n",
    "Bi-gram            | 0.73        | 0.68    | <b>0.66</b> | 0.59 | 0.56 | <b>0.56</b> |\n",
    "Tri-gram           | 0.74        | 0.70    | <b>0.69</b> | 0.57 | 0.56 | <b>0.56</b> |\n",
    "Transfer learning (Bert + LR)   | 0.90         | 0.90    | <b>0.90</b> | 0.59 | 0.60 | <b>0.59</b> |\n",
    "Bert           | 0.91        | 0.91     | <b>0.91</b> | 0.63 | 0.61 | <b>0.62</b> |\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4. N-gram models with pre-trained word embedding"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Fast-text pretrained word embedding (The training time will be extremely long)<br>\n",
    "* <h4>Using un-balanced data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Preprocessing:\n",
      "\n",
      "19 na data found\n",
      "na data dropped\n",
      "--------------------------------------------------------Now is 0 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1162 training data after oversampling.\n",
      "--------------------------------------------------------Now is 1 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1148 training data after oversampling.\n",
      "--------------------------------------------------------Now is 2 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1150 training data after oversampling.\n",
      "--------------------------------------------------------Now is 3 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1166 training data after oversampling.\n",
      "--------------------------------------------------------Now is 4 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 5 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1138 training data after oversampling.\n",
      "--------------------------------------------------------Now is 6 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1158 training data after oversampling.\n",
      "--------------------------------------------------------Now is 7 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1152 training data after oversampling.\n",
      "--------------------------------------------------------Now is 8 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 9 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1156 training data after oversampling.\n",
      "classification report on training set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       1.00      1.00      1.00      5769\n",
      "     class 1       1.00      1.00      1.00      5769\n",
      "\n",
      "    accuracy                           1.00     11538\n",
      "   macro avg       1.00      1.00      1.00     11538\n",
      "weighted avg       1.00      1.00      1.00     11538\n",
      "\n",
      "confusion matrix on training set is:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report on validation set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       0.52      0.39      0.45       237\n",
      "     class 1       0.79      0.87      0.83       641\n",
      "\n",
      "    accuracy                           0.74       878\n",
      "   macro avg       0.66      0.63      0.64       878\n",
      "weighted avg       0.72      0.74      0.73       878\n",
      "\n",
      "confusion matrix on validation set is:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "run(X, y, wordNgrams=1, pretrainedVectors='wiki.en.vec')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### unfinished below"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "run(X, y, wordNgrams=2, pretrainedVectors='wiki.en.vec')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Preprocessing:\n",
      "\n",
      "19 na data found\n",
      "na data dropped\n",
      "--------------------------------------------------------Now is 0 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1162 training data after oversampling.\n",
      "--------------------------------------------------------Now is 1 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1148 training data after oversampling.\n",
      "--------------------------------------------------------Now is 2 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1150 training data after oversampling.\n",
      "--------------------------------------------------------Now is 3 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1166 training data after oversampling.\n",
      "--------------------------------------------------------Now is 4 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 5 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1138 training data after oversampling.\n",
      "--------------------------------------------------------Now is 6 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1158 training data after oversampling.\n",
      "--------------------------------------------------------Now is 7 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (790,) (88,)\n",
      "\n",
      "We totally have 1152 training data after oversampling.\n",
      "--------------------------------------------------------Now is 8 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1154 training data after oversampling.\n",
      "--------------------------------------------------------Now is 9 fold--------------------------------------------------------\n",
      "[X training set shape, X training set shape]: (791,) (87,)\n",
      "\n",
      "We totally have 1156 training data after oversampling.\n",
      "\n",
      "classification report of best model on training set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       1.00      1.00      1.00       569\n",
      "     class 1       1.00      1.00      1.00       569\n",
      "\n",
      "    accuracy                           1.00      1138\n",
      "   macro avg       1.00      1.00      1.00      1138\n",
      "weighted avg       1.00      1.00      1.00      1138\n",
      "\n",
      "confusion matrix of best model on training set is:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n",
      "classification report of best model on validation set is:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "     class 0       0.54      0.44      0.48        16\n",
      "     class 1       0.88      0.92      0.90        72\n",
      "\n",
      "    accuracy                           0.83        88\n",
      "   macro avg       0.71      0.68      0.69        88\n",
      "weighted avg       0.82      0.83      0.82        88\n",
      "\n",
      "confusion matrix of best model is on validation set:\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "run(X, y, wordNgrams=3, pretrainedVectors='wiki.en.vec')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### To sum up:<br>\n",
    "###### unfinished\n",
    "\n",
    "Model| training set macro precision | training set macro recall | training set macro F1| evaluation set macro precision | evaluation set macro recall | evaluation set macro F1|\n",
    "----------| --------- | ------ | ---- | ---------|----------| --------- | \n",
    "Uni-gram           | 0.71        | 0.58     | <b>0.50</b> | 0.65 | 0.54 | <b>0.51</b> |\n",
    "Bi-gram            | 0.73        | 0.68    | <b>0.66</b> | 0.59 | 0.56 | <b>0.56</b> |\n",
    "Tri-gram           | 0.74        | 0.70    | <b>0.69</b> | 0.57 | 0.56 | <b>0.56</b> |\n",
    "Transfer learning (Bert + LR)   | 0.90         | 0.90    | <b>0.90</b> | 0.59 | 0.60 | <b>0.59</b> |\n",
    "Bert           | 0.91        | 0.91     | <b>0.91</b> | 0.63 | 0.61 | <b>0.62</b> |"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.12"
  },
  "toc-showtags": true
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
